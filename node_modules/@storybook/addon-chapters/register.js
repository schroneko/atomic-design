'use strict';

var _storybookAdk = require('storybook-adk');

var _addonLinks = require('@storybook/addon-links');

var _store = require('storybook-adk/dist/store/store');

var _config = require('./dist/config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var logger = {
    log: function log() {}
}; // fixme: in adk

(0, _addonLinks.register)();

(0, _storybookAdk.register)(_config2.default, function (env) {
    env.addonStore.watch('enabledMap', function (map) {
        logger.log('enabledMap', map);
    });

    var setupChannel = env.channelInit(_store.ENQ_SEND, 'cp01');
    /* const stopChannel = */setupChannel();
    env.storybookApi.onStory(function (kind, name) {
        env.addonStore.set('onStory', { kind: kind, name: name });
    });
});
