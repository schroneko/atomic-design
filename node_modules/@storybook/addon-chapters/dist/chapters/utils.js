'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.modDEL = undefined;
exports.cleanStoriesOf = cleanStoriesOf;
exports.setKindIndex = setKindIndex;
exports.breadcrumbs = breadcrumbs;
exports.crumbsString = crumbsString;
exports.strToCrumbs = strToCrumbs;

var _react = require('@storybook/react');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var modDEL = {
    hot: {
        dispose: function dispose(fn) {
            fn();
        }
    }
};

exports.modDEL = modDEL;
function cleanStoriesOf(kindName) {
    /** note: cleanStoriesOf
      * remove storyKind from list
      * but keep in index
      */
    if (!kindName) return;

    (0, _react.storiesOf)(kindName, module).add('_', function () {
        return null;
    });
    (0, _react.storiesOf)(kindName, modDEL);
}

function setKindIndex(kindName) {
    /**
     * here we store storyKind index and clean it
     * it keeps the oder of storyKinds
     */
    (0, _react.storiesOf)(kindName, module).add('dummmy 1', function () {
        return null;
    });
    cleanStoriesOf(kindName);
}

function breadcrumbs(chapter, tail) {
    return !chapter ? tail : breadcrumbs(chapter.parent, [chapter].concat(_toConsumableArray(tail || [])));
}

function crumbsString(chapter) {
    var divChar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';

    var crumbsArr = breadcrumbs(chapter);
    var str = crumbsArr.reduce(function (prev, val) {
        return '' + (prev.name || prev) + divChar + val.name;
    });
    if (typeof str === 'string') {
        return str;
    }
    return chapter.name;
}

function strToCrumbs(str) {
    var divChar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';

    return str.split(divChar);
}