'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.newStorybook = newStorybook;
exports.chapterSelect = chapterSelect;
exports.chapterHide = chapterHide;
exports.chapterShow = chapterShow;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _react3 = require('@storybook/react');

var _addonLinks = require('@storybook/addon-links');

var _store = require('./store');

var _utils = require('./utils');

var _defaults = require('./defaults');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import { chapterTOC } from './defaults';


function newStorybook(chapter) {
    var chapterList = chapter.subchapters;
    var storyList = chapter.stories;
    var decoratorList = chapter.decorators;
    return function () {
        var newStory = (0, _react3.storiesOf)(chapter.name, module);
        decoratorList.forEach(function (fn) {
            return newStory.addDecorator(fn);
        });
        if (chapter.parent || chapterList.length > 0) {
            newStory.add(_defaults.BADGES.toc, chapter.TOC(chapter));
        }
        if (chapter.parent) {
            newStory.add(_defaults.BADGES.up, chapterSelect(chapter.parent, chapter.name));
        }
        chapterList.forEach(function (subchapter) {
            newStory.add('[' + subchapter.name + ']', chapterSelect(subchapter, chapter.name));
        });
        storyList.forEach(function (_ref) {
            var storyName = _ref.storyName;
            var getStory = _ref.getStory;

            newStory.add(storyName, getStory);
        });
    };
}

function rebuildStorybook(currentchapter) {
    (0, _react3.configure)(newStorybook(currentchapter), module);
}

function chapterSelect(chapter, prevKindName) {
    return function () {
        var name = chapter.name;
        var redirect = function redirect() {
            (0, _utils.cleanStoriesOf)(prevKindName);
            rebuildStorybook(chapter);
            (0, _addonLinks.linkTo)(chapter.name, '.')(); // fixme: ???
            (0, _store.setCurrentChapter)(chapter);
        };
        redirect();
        return _react2.default.createElement(
            'button',
            { onClick: redirect },
            _react2.default.createElement(
                'p',
                null,
                'Redirect to ',
                name,
                ' chapter'
            )
        );
    };
}

function chapterHide(chapter) {
    (0, _utils.cleanStoriesOf)(chapter.name);
    (0, _react3.configure)(function () {}, module);
}

function chapterShow(chapter) {
    rebuildStorybook(chapter);
}