{"version":3,"sources":["../src/document.js"],"names":["chainProxy","require","TimeoutError","WaitTimeoutError","EvaluateTimeoutError","EvaluateError","wrapFunctionForEvaluation","wrapFunctionForCallFunction","escapeHtml","escapeNewLine","escapeSingleQuote","Document","chromy","client","nodeId","_originalNodeId","options","selector","callback","getBoundingClientRect","rect","Promise","resolve","_getPageOffset","originalPageOffset","doc","scrollTo","top","locationParams","x","left","y","DOM","getNodeForLocation","iframeNodeId","_activateOnDocumentUpdatedListener","apply","expr","inputOptions","defaults","waitLoadEvent","Object","assign","promise","_getNodeId","nid","evalExpr","_evaluateOnNode","evaluate","value","sel","src","_evaluateWithReplaces","dx","_1","dy","_2","window","pageXOffset","pageYOffset","Function","Array","map","parameter","JSON","stringify","console","log","toString","replaces","e","_waitFinish","evaluateTimeout","contextNodeId","_getObjectIdFromNodeId","objectId","params","functionDeclaration","Runtime","callFunctionOn","expression","result","subtype","awaitPromise","promiseObjectId","returnByValue","type","description","resultObject","parse","undefined","fn","enable","document","querySelector","dom","offsetWidth","offsetHeight","cond","sleep","_waitFunction","_waitSelector","func","waitTimeout","r","waitFunctionPollingInterval","check","startTime","Date","now","reject","setTimeout","exists","timeout","start","finished","error","f","characters","split","i","c","Input","dispatchKeyEvent","text","typeInterval","msec","width","height","Math","floor","doms","querySelectorAll","prototype","call","rects","_onDocumentUpdatedListener","documentUpdated","resolveNode","rObj","object","getDocument","root","devicePixelRatio","body","scrollWidth","scrollHeight","viewportWidth","innerWidth","viewportHeight","innerHeight","module","exports"],"mappings":"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","file":"document.js","sourcesContent":["const chainProxy = require('async-chain-proxy')\n\nconst {\n  TimeoutError,\n  WaitTimeoutError,\n  EvaluateTimeoutError,\n  EvaluateError,\n} = require('./error')\nconst {\n  wrapFunctionForEvaluation,\n  wrapFunctionForCallFunction,\n} = require('./functionToSource')\nconst {\n  escapeHtml,\n  escapeNewLine,\n  escapeSingleQuote,\n} = require('./util')\n\n/**\n * Document class\n *\n * @class\n *\n * @param {Document} [chromy]      Chromy instance\n * @param {CDP}      [client]      CDP instance\n * @param {number}   [nodeId=null]\n */\n\nclass Document {\n  constructor (chromy, client, nodeId = null) {\n    /**\n     * Chromy instance\n     *\n     * @name chromy\n     * @type {Document}\n     *\n     * @memberof Document\n     * @instance\n     */\n    if (chromy) {\n      this.chromy = chromy\n    } else {\n      this.chromy = this\n    }\n    /**\n     * CDP client instance\n     *\n     * @name client\n     * @type {CDP}\n     *\n     * @memberof Document\n     * @instance\n     *\n     * @see {@link https://www.npmjs.com/package/chrome-remote-interface#event-connect}\n     */\n    this.client = client\n    this.nodeId = nodeId\n    this._originalNodeId = nodeId\n  }\n\n  chain (options = {}) {\n    return chainProxy(this, options)\n  }\n\n  async iframe (selector, callback) {\n    const rect = await this.getBoundingClientRect(selector)\n    if (!rect) {\n      return Promise.resolve()\n    }\n    // to get the the node for location, a position of the node must be in a viewport.\n    const originalPageOffset = await this._getPageOffset()\n    let doc = null\n    try {\n      await this.scrollTo(0, rect.top)\n      const locationParams = {x: rect.left + 10, y: rect.top + 10}\n      const {nodeId: iframeNodeId} = await this.client.DOM.getNodeForLocation(locationParams)\n      if (!iframeNodeId) {\n        return Promise.resolve()\n      }\n      doc = new Document(this.chromy, this.client, iframeNodeId)\n      doc._activateOnDocumentUpdatedListener()\n    } finally {\n      // restore scroll potion.\n      await this.scrollTo(originalPageOffset.x, originalPageOffset.y)\n    }\n    return Promise.resolve(callback.apply(this, [doc]))\n  }\n\n  async click (expr, inputOptions = {}) {\n    const defaults = {waitLoadEvent: false}\n    const options = Object.assign({}, defaults, inputOptions)\n    let promise = null\n    if (options.waitLoadEvent) {\n      promise = this.waitLoadEvent()\n    }\n    let nid = await this._getNodeId()\n    let evalExpr = 'document.querySelectorAll(\\'' + escapeSingleQuote(expr) + '\\').forEach(n => n.click())'\n    if (this._originalNodeId) {\n      await this._evaluateOnNode(nid, evalExpr)\n    } else {\n      await this.evaluate(evalExpr)\n    }\n    if (promise !== null) {\n      await promise\n    }\n  }\n\n  async insert (expr, value) {\n    expr = escapeSingleQuote(expr)\n    await this.evaluate('document.querySelector(\\'' + expr + '\\').focus()')\n    await this.evaluate('document.querySelector(\\'' + expr + '\\').value = \"' + escapeNewLine(escapeHtml(value)) + '\"')\n  }\n\n  async check (selector) {\n    await this.evaluate('document.querySelectorAll(\\'' + escapeSingleQuote(selector) + '\\').forEach(n => n.checked = true)')\n  }\n\n  async uncheck (selector) {\n    await this.evaluate('document.querySelectorAll(\\'' + escapeSingleQuote(selector) + '\\').forEach(n => n.checked = false)')\n  }\n\n  async select (selector, value) {\n    let sel = escapeSingleQuote(selector)\n    const src = `\n      document.querySelectorAll('${sel} > option').forEach(n => {\n        if (n.value === \"${value}\") {\n          n.selected = true\n        }\n      })\n      `\n    await this.evaluate(src)\n  }\n\n  async scroll (x, y) {\n    return this._evaluateWithReplaces(function () {\n      const dx = _1  // eslint-disable-line no-undef\n      const dy = _2  // eslint-disable-line no-undef\n      window.scrollTo(window.pageXOffset + dx, window.pageYOffset + dy)\n    }, {}, {'_1': x, '_2': y})\n  }\n\n  async scrollTo (x, y) {\n    return this._evaluateWithReplaces(function () {\n      window.scrollTo(_1, _2) // eslint-disable-line no-undef\n    }, {}, {'_1': x, '_2': y})\n  }\n\n  async _getPageOffset () {\n    return this.evaluate(_ => {\n      return {\n        x: window.pageXOffset,\n        y: window.pageYOffset,\n      }\n    })\n  }\n\n  /**\n   * Evaluates a expression in the browser context\n   *\n   * @memberof Document\n   * @function\n   *\n   * @param {(function|string)} expr    - JS expression\n   *                                      If the expression returns a Promise object,\n   *                                      the promise is resolved automatically.\n   * @param {(object|array)}    options - Parameter array of `expr` function or\n   *                                      Option object\n   *\n   * @return {Promise}          Returned value of `expr` function\n   */\n  async evaluate (expr, options = {}) {\n    if ((expr instanceof Function) && (options instanceof Array)) {\n      options = options.map(function (parameter) {\n        return JSON.stringify(JSON.stringify(parameter))\n      })\n      // eslint-disable-next-line no-new-func\n      expr = new Function(`\n        return (${expr}).apply(this, Array.from(arguments).concat([${options}].map(function (parameter) {\n          return JSON.parse(parameter)\n        })))\n      `)\n      console.log(expr.toString())\n      options = {}\n    }\n    return await this._evaluateWithReplaces(expr, options)\n  }\n\n  async _evaluateWithReplaces (expr, options = {}, replaces = {}) {\n    let e = null\n    if (this._originalNodeId) {\n      e = wrapFunctionForCallFunction(expr, replaces)\n    } else {\n      e = wrapFunctionForEvaluation(expr, replaces)\n    }\n    try {\n      let result = await this._waitFinish(this.chromy.options.evaluateTimeout, async () => {\n        if (!this.client) {\n          return null\n        }\n        if (this._originalNodeId) {\n          // must call callFunctionOn() for evaluating expression with iframe context.\n          const contextNodeId = await this._getNodeId()\n          const objectId = await this._getObjectIdFromNodeId(contextNodeId)\n          const params = Object.assign({}, options, {objectId: objectId, functionDeclaration: e})\n          return await this.client.Runtime.callFunctionOn(params)\n        } else {\n          return await this.client.Runtime.evaluate({expression: e})\n        }\n      })\n      if (!result || !result.result) {\n        return null\n      }\n      // resolve a promise\n      if (result.result.subtype === 'promise') {\n        result = await this.client.Runtime.awaitPromise({promiseObjectId: result.result.objectId, returnByValue: true})\n        // adjust to after process\n        result.result.value = JSON.stringify({\n          type: (typeof result.result.value),\n          result: JSON.stringify(result.result.value),\n        })\n      }\n      if (result.result.subtype === 'error') {\n        throw new EvaluateError('An error has occurred evaluating the script in the browser.' + result.result.description, result.result)\n      }\n      const resultObject = JSON.parse(result.result.value)\n      const type = resultObject.type\n      if (type === 'undefined') {\n        return undefined\n      } else {\n        try {\n          return JSON.parse(resultObject.result)\n        } catch (e) {\n          console.log('ERROR', resultObject)\n          throw e\n        }\n      }\n    } catch (e) {\n      if (e instanceof TimeoutError) {\n        throw new EvaluateTimeoutError('evaluate() timeout')\n      } else {\n        throw e\n      }\n    }\n  }\n\n  // evaluate a function on the specified node context.\n  async _evaluateOnNode (nodeId, fn) {\n    const objectId = await this._getObjectIdFromNodeId(nodeId)\n    const src = fn.toString()\n    const functionDeclaration = `function () {\n      return (${src})()\n    }`\n    const params = {\n      objectId,\n      functionDeclaration,\n    }\n    await this.client.Runtime.enable()\n    await this.client.Runtime.callFunctionOn(params)\n  }\n\n  async exists (selector) {\n    return this._evaluateWithReplaces(\n      _ => { return document.querySelector('?') !== null },\n      {}, {'?': escapeSingleQuote(selector)},\n    )\n  }\n\n  async visible (selector) {\n    return this._evaluateWithReplaces(\n      _ => {\n        let dom = document.querySelector('?')\n        return dom !== null && dom.offsetWidth > 0 && dom.offsetHeight > 0\n      },\n      {}, {'?': escapeSingleQuote(selector)},\n    )\n  }\n\n  async wait (cond) {\n    if ((typeof cond) === 'number') {\n      await this.sleep(cond)\n    } else if ((typeof cond) === 'function') {\n      await this._waitFunction(cond)\n    } else {\n      await this._waitSelector(cond)\n    }\n  }\n\n  // wait for func to return true.\n  async _waitFunction (func) {\n    await this._waitFinish(this.chromy.options.waitTimeout, async () => {\n      while (true) {\n        const r = await this.evaluate(func)\n        if (r) {\n          break\n        }\n        await this.sleep(this.chromy.options.waitFunctionPollingInterval)\n      }\n    })\n  }\n\n  async _waitSelector (selector) {\n    let check = null\n    let startTime = Date.now()\n    await new Promise((resolve, reject) => {\n      check = () => {\n        setTimeout(async () => {\n          try {\n            const now = Date.now()\n            if (now - startTime > this.chromy.options.waitTimeout) {\n              reject(new WaitTimeoutError('wait() timeout'))\n              return\n            }\n            const result = await this.exists(selector)\n            if (result) {\n              resolve(result)\n            } else {\n              check()\n            }\n          } catch (e) {\n            reject(e)\n          }\n        }, this.chromy.options.waitFunctionPollingInterval)\n      }\n      check()\n    })\n  }\n\n  async _waitFinish (timeout, callback) {\n    const start = Date.now()\n    let finished = false\n    let error = null\n    let result = null\n    const f = async () => {\n      try {\n        result = await callback.apply()\n        finished = true\n        return result\n      } catch (e) {\n        error = e\n        finished = true\n      }\n    }\n    f.apply()\n    while (!finished) {\n      const now = Date.now()\n      if ((now - start) > timeout) {\n        throw new TimeoutError('timeout')\n      }\n      await this.sleep(this.chromy.options.waitFunctionPollingInterval)\n    }\n    if (error !== null) {\n      throw error\n    }\n    return result\n  }\n\n  async type (expr, value) {\n    await this.evaluate('document.querySelector(\\'' + escapeSingleQuote(expr) + '\\').focus()')\n    const characters = value.split('')\n    for (let i in characters) {\n      const c = characters[i]\n      await this.client.Input.dispatchKeyEvent({type: 'char', text: c})\n      await this.sleep(this.chromy.options.typeInterval)\n    }\n  }\n\n  async sleep (msec) {\n    await new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve()\n      }, msec)\n    })\n  }\n\n  // deprecated\n  async getBoundingClientRect (selector) {\n    return this.rect(selector)\n  }\n\n  async rect (selector) {\n    const rect = await this._evaluateWithReplaces(function () {\n      let dom = document.querySelector('?')\n      if (!dom) {\n        return null\n      }\n      let r = dom.getBoundingClientRect()\n      return {top: r.top, left: r.left, width: r.width, height: r.height}\n    }, {}, {'?': escapeSingleQuote(selector)})\n    if (!rect) {\n      return null\n    }\n    return {\n      top: Math.floor(rect.top),\n      left: Math.floor(rect.left),\n      width: Math.floor(rect.width),\n      height: Math.floor(rect.height),\n    }\n  }\n\n  async rectAll (selector) {\n    const rects = await this._evaluateWithReplaces(function () {\n      let doms = document.querySelectorAll('?')\n      return Array.prototype.map.call(doms, dom => {\n        let r = dom.getBoundingClientRect()\n        return {top: r.top, left: r.left, width: r.width, height: r.height}\n      })\n    }, {}, {'?': escapeSingleQuote(selector)})\n    return rects.map(rect => {\n      return {\n        top: Math.floor(rect.top),\n        left: Math.floor(rect.left),\n        width: Math.floor(rect.width),\n        height: Math.floor(rect.height),\n      }\n    })\n  }\n\n  _activateOnDocumentUpdatedListener () {\n    this._onDocumentUpdatedListener = () => {\n      this.nodeId = null\n    }\n    this.client.DOM.documentUpdated(this._onDocumentUpdatedListener)\n  }\n\n  async _getObjectIdFromNodeId (nodeId) {\n    const {object: rObj} = await this.client.DOM.resolveNode({nodeId})\n    if (!rObj) {\n      return null\n    }\n    return rObj.objectId\n  }\n\n  async _getNodeId () {\n    if (!this.nodeId) {\n      let {root} = await this.client.DOM.getDocument()\n      this.nodeId = root.nodeId\n    }\n    return this.nodeId\n  }\n\n  async _getScreenInfo () {\n    return await this.evaluate(function () {\n      return {\n        devicePixelRatio: window.devicePixelRatio,\n        width: document.body.scrollWidth,\n        height: document.body.scrollHeight,\n        viewportWidth: window.innerWidth,\n        viewportHeight: window.innerHeight,\n      }\n    })\n  }\n\n}\n\nmodule.exports = Document\n"]}